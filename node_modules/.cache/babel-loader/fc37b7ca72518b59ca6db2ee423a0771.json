{"ast":null,"code":"var _jsxFileName = \"/Users/evelyntan/src/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors Appointment\",\n    day: \"Jan 15th at 2:30pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Cat Appointment\",\n    day: \"Feb 24th at 2:30pm\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"House Appointment\",\n    day: \"March 14th at 2:30pm\",\n    reminder: true\n  }]);\n  const name = \"Evelyn\"; // Add Task\n\n  const addTask = () => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task function\n\n\n  const deleteTask = id => {\n    // console.log(\"delete\", id); shown in Task.js\n    setTasks(tasks.filter(task => task.id !== id)); // We do not want to show the actual id thats being pass as we are deleting it\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : \"No Task to Do\" // this will show when all the task is being deleted\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VHzZXRXZ+KMpTOxkIq5Sm8ckshk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/evelyntan/src/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","tasks","setTasks","id","text","day","reminder","name","addTask","Math","floor","random","newTask","task","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,GAAG,EAAE,sBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbiC,CAAD,CAAlC;AAoBA,QAAMC,IAAI,GAAG,QAAb,CArBa,CAuBb;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAET,MAAAA,EAAF;AAAM,SAAGU;AAAT,KAAhB;AACAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAR;AACD,GAJD,CAxBa,CA8Bb;;;AACA,QAAME,UAAU,GAAIX,EAAD,IAAQ;AACzB;AACAD,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAnC,CAAD,CAAR,CAFyB,CAEyB;AACnD,GAHD,CA/Ba,CAoCb;;;AACA,QAAMa,cAAc,GAAIb,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACgB,GAAN,CAAWJ,IAAD,IACRA,IAAI,CAACV,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGU,IAAL;AAAWP,MAAAA,QAAQ,EAAE,CAACO,IAAI,CAACP;AAA3B,KAAjB,GAAyDO,IAD3D,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGP,KAAK,CAACiB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAqB,MAAA,QAAQ,EAAEa,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,eAHD,CAGiB;AANpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxDQhB,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Jan 15th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Cat Appointment\",\n      day: \"Feb 24th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"House Appointment\",\n      day: \"March 14th at 2:30pm\",\n      reminder: true,\n    },\n  ]);\n  const name = \"Evelyn\";\n\n  // Add Task\n  const addTask = () => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task function\n  const deleteTask = (id) => {\n    // console.log(\"delete\", id); shown in Task.js\n    setTasks(tasks.filter((task) => task.id !== id)); // We do not want to show the actual id thats being pass as we are deleting it\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddTask onAdd={addTask} />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Task to Do\" // this will show when all the task is being deleted\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}